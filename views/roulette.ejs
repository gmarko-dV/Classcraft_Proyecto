<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Ruleta de Estudiantes</title>
  <style>
    /* Los estilos no cambian */
  </style>
</head>
<body>

  <h1>🎯 Juego de Ruleta</h1>

  <div class="student-count">
    📚 Total de estudiantes: <strong><%= students.length %></strong>
  </div>

  <div class="selected-student">
    <h2>Estudiante Actualmente Seleccionado</h2>
    <div class="student-name" id="selectedStudentDisplay">
      <% if (selectedStudent) { %>
        <%= selectedStudent.nombre %> <%= selectedStudent.apellido %>
      <% } else { %>
        Ninguno
      <% } %>
    </div>
  </div>

  <div class="roulette-container">
    <div class="roulette-wheel" id="rouletteWheel">
      <div class="pointer"></div>
      <div class="center-circle">GIRAR</div>
      
      <% students.forEach((student, index) => { %>
        <div class="roulette-item" 
             style="transform: rotate('<%= index * (360 / students.length) %>deg'); 
                    background-color: hsl('<%= (index * 360 / students.length) %>', 70%, 60%);">
          <%= student.nombre %> <%= student.apellido %>
        </div>
      <% }) %>
    </div>
  </div>

  <div class="button-container">
    <button class="spin-button" id="spinButton">🎲 Girar Ruleta</button>
    <button class="reset-button" onclick="resetRoulette()">🔄 Reiniciar</button>
  </div>

  <footer>
    <p>&copy; 2025 Mi Classcraft. Todos los derechos reservados.</p>
  </footer>

  <script>
    const students = "<%- JSON.stringify(students) %>";  // Pasar los estudiantes desde el backend
    let isSpinning = false;
    let currentRotation = 0;
    const wheel = document.getElementById('rouletteWheel');
    const spinButton = document.getElementById('spinButton');
    const selectedDisplay = document.getElementById('selectedStudentDisplay');

    function spinRoulette() {
      if (isSpinning) return;

      if (students.length === 0) {
        alert('No hay estudiantes en esta clase para la ruleta.');
        return;
      }

      isSpinning = true;
      spinButton.disabled = true;
      spinButton.textContent = '🎲 Girando...';
      spinButton.style.background = '#ccc';

      // Generar número aleatorio para seleccionar estudiante
      const randomIndex = Math.floor(Math.random() * students.length);
      const selectedStudent = students[randomIndex];

      // Calcular ángulo de rotación
      const anglePerStudent = 360 / students.length;
      const targetAngle = randomIndex * anglePerStudent;

      // Rotación total: 5-8 vueltas completas + ángulo objetivo
      const extraRotations = (Math.floor(Math.random() * 4) + 5) * 360; // 5 a 8 vueltas completas
      const finalRotation = currentRotation + extraRotations + (360 - targetAngle);

      // Aplicar la rotación con transición suave
      wheel.style.transform = `rotate(${finalRotation}deg)`;
      currentRotation = finalRotation;

      // Después de la animación (4 segundos)
      setTimeout(() => {
        // Actualizar display del estudiante seleccionado
        selectedDisplay.textContent = `${selectedStudent.nombre} ${selectedStudent.apellido}`;
        selectedDisplay.classList.add('winner-animation');

        // Crear efecto confetti
        createConfetti();

        // Mostrar alerta con el resultado
        setTimeout(() => {
          alert(`🎉 ¡El estudiante seleccionado es: ${selectedStudent.nombre} ${selectedStudent.apellido}!`);
        }, 500);

        // Resetear el botón
        setTimeout(() => {
          isSpinning = false;
          spinButton.disabled = false;
          spinButton.textContent = '🎲 Girar Ruleta';
          spinButton.style.background = 'linear-gradient(45deg, #ff6b6b, #ee5a52)';
          selectedDisplay.classList.remove('winner-animation');
        }, 3000);

      }, 4000); // 4 segundos para que termine la animación
    }

    function resetRoulette() {
      if (isSpinning) return;

      currentRotation = 0;
      wheel.style.transform = 'rotate(0deg)';
      selectedDisplay.textContent = 'Gira la ruleta para seleccionar';
      selectedDisplay.classList.remove('winner-animation');
    }

    function createConfetti() {
      const colors = ['#ff6b6b', '#4ecdc4', '#45b7d1', '#96ceb4', '#feca57', '#ff9ff3', '#54a0ff'];

      for (let i = 0; i < 100; i++) {
        setTimeout(() => {
          const confetti = document.createElement('div');
          confetti.className = 'confetti';
          confetti.style.left = Math.random() * 100 + 'vw';
          confetti.style.backgroundColor = colors[Math.floor(Math.random() * colors.length)];
          confetti.style.animation = `confetti-fall ${Math.random() * 2 + 2}s linear forwards`;
          confetti.style.animationDelay = Math.random() * 1 + 's';
          document.body.appendChild(confetti);

          // Remover el confetti después de la animación
          setTimeout(() => {
            if (confetti.parentNode) {
              confetti.parentNode.removeChild(confetti);
            }
          }, 4000);
        }, i * 30);
      }
    }

    // Event listener para el botón de girar
    spinButton.addEventListener('click', spinRoulette);

    // Inicialización: aplicar colores dinámicos a la ruleta
    function initializeRoulette() {
      const rouletteItems = document.querySelectorAll('.roulette-item');
      rouletteItems.forEach((item, index) => {
        const hue = (index * 360 / students.length);
        item.style.backgroundColor = `hsl(${hue}, 70%, 60%)`;
      });
    }

    // Inicializar cuando se carga la página
    window.addEventListener('load', initializeRoulette);
  </script>

</body>
</html>
